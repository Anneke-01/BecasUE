<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>